<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:models="clr-namespace:library.Models"
    xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=System.ComponentModel.TypeConverter">

  <!-- ===== Estilos de paginaciÃ³n ===== -->
  <Style x:Key="PageButton" TargetType="Button">
    <Setter Property="MinWidth" Value="30"/>
    <Setter Property="Height" Value="25"/>
    <Setter Property="Padding" Value="12,0"/>
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="Foreground" Value="{DynamicResource PageText}"/>
    <Setter Property="BorderBrush" Value="{DynamicResource PageBorder}"/>
    <Setter Property="BorderThickness" Value="0,0,1,0"/>
    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border x:Name="bd"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="bd" Property="Background" Value="{DynamicResource PageHoverBg}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" Value="0.45"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="PageButtonActive" TargetType="Button" BasedOn="{StaticResource PageButton}">
    <Setter Property="Background" Value="{DynamicResource PageActiveBg}"/>
    <Setter Property="Foreground" Value="{DynamicResource PageActiveFg}"/>
  </Style>

  <Style x:Key="PageArrowButton" TargetType="Button" BasedOn="{StaticResource PageButton}">
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="MinWidth" Value="44"/>
  </Style>

  <Style x:Key="PageButtonLeftCap" TargetType="Button" BasedOn="{StaticResource PageArrowButton}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border x:Name="bd" CornerRadius="16,0,0,16"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{DynamicResource PageBorder}" BorderThickness="0">
            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="bd" Property="Background" Value="{DynamicResource PageHoverBg}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="bd" Property="Opacity" Value="0.45"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="PageButtonRightCap" TargetType="Button" BasedOn="{StaticResource PageArrowButton}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border x:Name="bd" CornerRadius="0,16,16,0"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{DynamicResource PageBorder}" BorderThickness="0">
            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="bd" Property="Background" Value="{DynamicResource PageHoverBg}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="bd" Property="Opacity" Value="0.45"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ===== Estilos de tabla ===== -->
  <Style x:Key="GhostIconButton" TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatButton}">
    <Setter Property="Width" Value="32"/>
    <Setter Property="Height" Value="32"/>
    <Setter Property="Padding" Value="0"/>
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderBrush" Value="{DynamicResource App.BorderBrush}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="materialDesign:RippleAssist.IsCentered" Value="True"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border x:Name="bd" CornerRadius="10"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  Background="{TemplateBinding Background}">
            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="bd" Property="Background" Value="{DynamicResource App.HoverBrush}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="CenterCell" TargetType="DataGridCell">
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Padding" Value="12,0"/>
    <Setter Property="Foreground" Value="{DynamicResource App.TextPrimaryBrush}"/>
    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="DataGridCell">
          <Border x:Name="Bd" Background="{TemplateBinding Background}"
                  BorderBrush="Transparent" BorderThickness="0">
            <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="Bd" Property="Background" Value="{DynamicResource App.HoverBrush}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
              <Setter TargetName="Bd" Property="Background" Value="Transparent"/>
              <Setter Property="Foreground" Value="{DynamicResource App.TextPrimaryBrush}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
              <Setter TargetName="Bd" Property="BorderBrush" Value="Transparent"/>
              <Setter TargetName="Bd" Property="BorderThickness" Value="0"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="CellTextCenter" TargetType="TextBlock">
    <Setter Property="VerticalAlignment" Value="Center"/>
  </Style>

  <!-- Header con flechas -->
  <Style x:Key="SlimHeader" TargetType="DataGridColumnHeader">
    <Setter Property="Background" Value="{DynamicResource App.SurfaceBrush}"/>
    <Setter Property="Foreground" Value="{DynamicResource HeaderFg}"/>
    <Setter Property="FontWeight" Value="SemiBold"/>
    <Setter Property="HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Padding" Value="12,8"/>
    <Setter Property="BorderBrush" Value="{DynamicResource HeaderBorder}"/>
    <Setter Property="BorderThickness" Value="0,0,0,1"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="DataGridColumnHeader">
          <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  Padding="{TemplateBinding Padding}">
            <Grid>
              <ContentPresenter Margin="0,0,18,0"
                                VerticalAlignment="Center"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
              <mah:PackIconMaterial x:Name="ArrowUp" Kind="ChevronUp"
                                    Width="12" Height="12"
                                    HorizontalAlignment="Right" VerticalAlignment="Center"
                                    Opacity="0.35" Foreground="{TemplateBinding Foreground}"/>
              <mah:PackIconMaterial x:Name="ArrowDown" Kind="ChevronDown"
                                    Width="12" Height="12"
                                    HorizontalAlignment="Right" VerticalAlignment="Center"
                                    Opacity="0.35" Visibility="Collapsed"
                                    Foreground="{TemplateBinding Foreground}"/>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="SortDirection" Value="{x:Static componentModel:ListSortDirection.Ascending}">
              <Setter TargetName="ArrowUp"   Property="Visibility" Value="Visible"/>
              <Setter TargetName="ArrowUp"   Property="Opacity"    Value="1"/>
              <Setter TargetName="ArrowDown" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="SortDirection" Value="{x:Static componentModel:ListSortDirection.Descending}">
              <Setter TargetName="ArrowUp"   Property="Visibility" Value="Collapsed"/>
              <Setter TargetName="ArrowDown" Property="Visibility" Value="Visible"/>
              <Setter TargetName="ArrowDown" Property="Opacity"    Value="1"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="ArrowUp"   Property="Opacity" Value="0.65"/>
              <Setter TargetName="ArrowDown" Property="Opacity" Value="0.65"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="SlimRow" TargetType="DataGridRow">
    <Setter Property="MinHeight" Value="50"/>
    <Setter Property="Height" Value="50"/>
    <Setter Property="BorderBrush" Value="{DynamicResource RowSeparator}"/>
    <Setter Property="BorderThickness" Value="0,0,0,1"/>
    <Setter Property="Background" Value="{DynamicResource App.SurfaceBrush}"/>
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{DynamicResource App.BackgroundBrush}"/>
      </Trigger>
      <Trigger Property="IsSelected" Value="True">
        <Setter Property="Background" Value="{DynamicResource App.RowSelectedBrush}"/>
      </Trigger>

      <!-- Cuando se muestran los detalles => altura automÃ¡tica -->
      <Trigger Property="DetailsVisibility" Value="Visible">
        <Setter Property="Height" Value="Auto"/>
      </Trigger>
	</Style.Triggers>
  </Style>


  <!-- Chip de gÃ©nero -->
  <Style x:Key="GenderChip" TargetType="Border">
    <Setter Property="Padding" Value="10,4"/>
    <Setter Property="CornerRadius" Value="10"/>
    <Setter Property="Background" Value="{DynamicResource Brush.Muted}"/>
    <Setter Property="BorderBrush" Value="{DynamicResource Brush.MutedBorder}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="TextElement.Foreground" Value="{DynamicResource Brush.TextSecondary}"/>
    <Setter Property="HorizontalAlignment" Value="Left"/>
    <Style.Triggers>
      <DataTrigger Binding="{Binding Gender}" Value="{x:Static models:Gender.Male}">
        <Setter Property="Background" Value="{DynamicResource Brush.InfoSoft}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Brush.InfoBorder}"/>
        <Setter Property="TextElement.Foreground" Value="{DynamicResource Brush.Info}"/>
      </DataTrigger>
      <DataTrigger Binding="{Binding Gender}" Value="{x:Static models:Gender.Female}">
        <Setter Property="Background" Value="#FFEAF0"/>
        <Setter Property="BorderBrush" Value="#FFD6E3"/>
        <Setter Property="TextElement.Foreground" Value="#B23A6F"/>
      </DataTrigger>
      <DataTrigger Binding="{Binding Gender}" Value="{x:Static models:Gender.Other}">
        <Setter Property="Background" Value="{DynamicResource Brush.Muted}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Brush.MutedBorder}"/>
        <Setter Property="TextElement.Foreground" Value="{DynamicResource Brush.TextSecondary}"/>
      </DataTrigger>
    </Style.Triggers>
  </Style>

</ResourceDictionary>
